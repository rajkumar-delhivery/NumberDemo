<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	 xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		 http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<resources mapping="/views/**" location="/WEB-INF/views/**" />
	<resources mapping="/css/**" location="/WEB-INF/views/css/" />
	<resources mapping="/js/**" location="/WEB-INF/views/js/**" />
	<resources mapping="/js/**" location="/WEB-INF/views/js/"/>
	<resources mapping="/images/**" location="/WEB-INF/views/images/**" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	
	<context:component-scan base-package="com.demo.number" />
	<context:property-placeholder location="classpath:application.properties" />
	
		<!-- ////////////////////////////////////Database/////////////////////////////////// -->
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<beans:property name="driverClassName" value="${jdbc.driver}" />

		<beans:property name="url" value="${jdbc.url.demodb}" />
		<beans:property name="username" value="${demodb.username}" />
		<beans:property name="password" value="${demodb.password}" />
		<beans:property name="initialSize" value="1" />
		<beans:property name="maxActive" value="5" />
		<beans:property name="maxIdle" value="2" />
		<beans:property name="validationQuery" value="SELECT 1" />
		<beans:property name="testOnBorrow" value="true" />
	</beans:bean>

	<beans:bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource">
			<beans:ref bean="dataSource" />
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
		<!-- <beans:property name="mappingResources"> <beans:list> <beans:value>/hibernate.cfg.xml</beans:value> 
			</beans:list> </beans:property> -->
		<beans:property name="packagesToScan">
			<beans:list>
				<beans:value>com.demo.number.dto</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	
	<beans:bean id="numberDao"
		class="com.demo.number.dao.impl.NumberDaoImpl">
		<beans:property name="sessionFactory" ref="sessionFactory"></beans:property>
	</beans:bean>

	

	<tx:annotation-driven proxy-target-class="true"
		transaction-manager="txManager" />
	<beans:bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory"></beans:property>
	</beans:bean>


	<!-- ////////////////////////////////////Database-END/////////////////////////////////// -->
	
	
	
	
</beans:beans>
